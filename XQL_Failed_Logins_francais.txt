dataset = xdr_data // Using the xdr dataset
| filter event_type = ENUM.EVENT_LOG and action_evtlog_event_id = 4625 // Filtering by windows event log and id 4625
| alter User_Name =arrayindex(regextract(action_evtlog_message, "Compte pour lequel l’ouverture.*\r\n.*\r\n.*Nom du compte.*?(\w.*)\r\n"),0)
| alter Logon_Type = arrayindex(regextract(action_evtlog_message, "Type d’ouverture de session.*?(\d+)\r\n"),0)
| alter Logon_type_Reason = ""
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "2", "Interactive", Logon_Type_Reason)
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "3", "Network", Logon_Type_Reason)
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "4", "Batch", Logon_Type_Reason)
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "5", "Service", Logon_Type_Reason)
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "7", "Unlock", Logon_Type_Reason)
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "8", "NetworkCleartext", Logon_Type_Reason)
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "9", "NewCredntials", Logon_Type_Reason)
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "10", "RemoteInteractive", Logon_Type_Reason)
| alter Logon_Type_Reason  = if(Logon_Type CONTAINS "11", "CachedInteractive", Logon_Type_Reason)
| alter Failure_Reason = arrayindex(regextract(action_evtlog_message,"Raison de l’échec :.*?(\w.*)\r\n"),0)
| alter Domain = arrayindex(regextract(action_evtlog_message, "Compte pour lequel l’ouverture.*\r\n.*\r\n.*.*\r\n.*Domaine du compte.*?(\w.*?)\r\n"),0)
| alter Source_IP = arrayindex(regextract(action_evtlog_message, "Adresse du réseau source.*?(\d+\.\d+\.\d+\.\d+)\r\n"),0)
| alter Caller_Process_Name = arrayindex(regextract(action_evtlog_message, "Nom du processus de l’appelant.*?(\w.*)\r\n"),0)
| alter Host_Name = arrayindex(regextract(action_evtlog_message, "Nom de la station de travail.*?(\w.*)\r\n"),0)
| alter FailCode = arrayindex(regextract(action_evtlog_message, "Sous-état.*?(\w.*)\r\n"),0)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC0000064", "User name does not exist", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC000006A", "Password is wrong", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC0000234", "User is currently locked out", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC0000072", "account is currently disabled", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC000006F", "User tried to logon outside his day of week or time of day restriction", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC0000070", "Workstation restriction", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC0000193", "Account expiration", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC0000071", "Expired password", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC0000133", "Clock between DC and other computer too far out of sync", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC0000224", "User is required to change password at next logon", Failure_Reason)
| alter Failure_Reason  = if(FailCode CONTAINS "0xC000015b", "The user has not been granted the requested logon type (aka logon right) at this machine", Failure_Reason)
| fields User_Name, Host_Name, Domain, Logon_Type,Logon_Type_Reason, FailCode, Failure_Reason, Source_IP, Caller_Process_Name // Select all the fields to show them
